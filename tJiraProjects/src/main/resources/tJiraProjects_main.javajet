<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		org.talend.core.model.utils.NodeUtil
		java.util.List 
    	java.util.Map
    	java.util.ArrayList
    	java.util.HashMap
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    
    /********************
     * DEFINES          *
     ********************/

    List<IConnection> outMainConns = new ArrayList<IConnection>(); // outgoing main connections
    List<String> outrowName = new ArrayList(); // outgoing connections names


	List<Map<String, String>> conditions = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,  "__CONDITIONS__");

	// Advanced parameters
    boolean exclusion_mode = "true".equals(ElementParameterParser.getValue(node,"__EXCLUSION_MODE__"));
    List<Map<String, String>> projectList = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,  "__PROJECT_LIST__");	

    // Decoding outgoing connections
    for(IConnection conn: NodeUtil.getOutgoingConnections(node, IConnectionCategory.DATA)){
    	if(!conn.isActivate()) continue;
    	IConnection cc = NodeUtil.getRealConnectionTypeBased(conn);
      outrowName.add(cc.getName());
    	outMainConns.add(cc);
    }
    
    stringBuffer.append(NL);
	stringBuffer.append("org.gabrielebaldassarre.tcomponent.bridge.TalendRow row_" + cid + " = rowFactory_" + cid + ".newRow(projectDetails_" + cid + ");");
    stringBuffer.append(NL);
    stringBuffer.append("detCrawl_" + cid + ".setProject(project_" + cid + ").visit(row_" + cid + ");");

  for (IConnection conn : outMainConns){ //2
  
  	List<IMetadataColumn> outMainColumns = conn.getMetadataTable().getListColumns();  
  	Map<String,IMetadataColumn> columnsMap = new HashMap<String,IMetadataColumn>();
  	for (IMetadataColumn col : outMainColumns) columnsMap.put(col.getLabel(),col);
  
    stringBuffer.append(NL);
    stringBuffer.append("/**" + NL);
    stringBuffer.append(" * start of outgoing connection: " + conn.getName() + NL);
    stringBuffer.append(" */" + NL);
    stringBuffer.append(conn.getName() + " = new " + conn.getName() + "Struct();");

	for(Map<String, String> data : conditions){
		stringBuffer.append(NL);
		stringBuffer.append("/* column: " + data.get("SCHEMA_COLUMN") + " */ ");
		stringBuffer.append(NL);
		String typeToCast = JavaTypesManager.getTypeToGenerate(columnsMap.get(data.get("SCHEMA_COLUMN")).getTalendType(),columnsMap.get(data.get("SCHEMA_COLUMN")).isNullable());
		stringBuffer.append(conn.getName() + "." + data.get("SCHEMA_COLUMN") + " = (" + typeToCast + ") row_" + cid + ".getValue(\"" + data.get("SCHEMA_COLUMN") + "\");");
		stringBuffer.append(NL);

	}
	
	stringBuffer.append("/**" + NL);
    stringBuffer.append(" * end of outgoing connection: " + conn.getName() + NL);
    stringBuffer.append(" */" + NL);
    
  }
    stringBuffer.append(NL);
    stringBuffer.append("globalMap.put(\"" + cid + "_CURRENT_PROJECT_KEY\", project_" + cid + ".getKey());" + NL);
    stringBuffer.append("globalMap.put(\"" + cid + "_CURRENT_PROJECT_SELF\", project_" + cid + ".getSelf().toString());" + NL);
  	stringBuffer.append(NL);
  	stringBuffer.append("nb_line_" + cid +"++;" + NL);
 %>